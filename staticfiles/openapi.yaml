openapi: 3.0.3
info:
  title: ''
  version: 0.0.0
paths:
  /users/auth/confirm-email/:
    get:
      operationId: users_auth_confirm_email_retrieve
      tags:
      - User Auth
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: users_auth_confirm_email_create
      tags:
      - User Auth
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /users/auth/resend-confirmation/:
    post:
      operationId: users_auth_resend_confirmation_create
      tags:
      - User Auth
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /users/auth/reset-password/:
    get:
      operationId: users_auth_reset_password_retrieve
      tags:
      - User Auth
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: users_auth_reset_password_create
      tags:
      - User Auth
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /users/auth/reset-password/send/:
    post:
      operationId: users_auth_reset_password_send_create
      tags:
      - User Auth
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /users/profile/:
    get:
      operationId: Retrieve user's data
      tags:
      - profile
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: Update user
      tags:
      - profile
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    patch:
      operationId: Change password
      tags:
      - profile
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /users/profile/qr_codes/:
    get:
      operationId: Retrieve user qrCode
      tags:
      - QR Codes
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: Create user qrCode
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /users/register/:
    post:
      operationId: Register a user
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /users/token/obtain/:
    post:
      operationId: Retrieve token
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - JWT token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /users/token/refresh/:
    post:
      operationId: Refresh token
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - JWT token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
components:
  schemas:
    TokenObtainPair:
      type: object
      properties:
        email:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
      required:
      - email
      - password
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    User:
      type: object
      properties:
        email:
          type: string
          format: email
          title: Email address
          description: The user's email address. Must be unique.
          maxLength: 254
        password:
          type: string
          writeOnly: true
          description: Required for account creation.
          maxLength: 128
        first_name:
          type: string
          description: The user's first name.
          maxLength: 30
        last_name:
          type: string
          description: The user's last name.
          maxLength: 30
        phone:
          type: string
          title: Phone number
          description: The user's phone number.
          maxLength: 30
        currency:
          type: string
          description: The preferred currency for the user's account.
          maxLength: 3
        is_accepted_terms:
          type: boolean
          description: Boolean indicating if the user has accepted the terms and conditions.
        referral_code:
          type: string
          writeOnly: true
          description: Optional referral code to link accounts.
      required:
      - currency
      - email
      - first_name
      - last_name
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
