services:
  dev:
    container_name:
      ambassador_dev
    build: .
    command: sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8001"
    volumes:
      - .:/app
    ports:
      - "8001:8001"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy

  prod:
    container_name:
      ambassador_prod
    build: .
    command: ["bash", "/app/start_prod.sh"]
    ports:
      - "8001:8001"
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_started
      db:
        condition: service_healthy
    restart: always
    volumes:
      - ./logs:/app/logs

  redis:
    image: redis:7
    container_name: ambassador_redis
    restart: always
    ports:
      - "6379:6379"

  refresher:
    container_name:
      ambassador_schedule_tasks
    build:
      context: .
      dockerfile: ./refresher_Dockerfile
    command: python refresher.py
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    restart: always
    volumes:
      - ./:/app

  db:
    container_name:
      ambassador_database
    image: postgres:17
    platform: linux/arm64/v8 # Use linux/arm64/v8 on prod and linux/amd64/v3 on dev
    restart: always
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}" ]
      interval: 2s
      retries: 10
      timeout: 3s

volumes:
  postgres_data:
